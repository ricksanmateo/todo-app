{"ast":null,"code":"var _jsxFileName = \"/home/pop/Desktop/repo/todo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport AddTasks from './components/AddTasks';\nimport Pending from './components/Pending';\nimport DoneTasks from './components/DoneTasks';\nimport { MyContext } from './components/MyContext';\nimport SAMPLE_TASKS from './data/sample-tasks.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState(SAMPLE_TASKS);\n  const addTaskHandler = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  const deleteTaskHandler = taskId => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n  };\n  const doneTaskHandler = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      status: 'done'\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: task.task_name\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n      value: {\n        tasks\n      },\n      children: [/*#__PURE__*/_jsxDEV(AddTasks, {\n        onAddTask: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pending, {\n        tasks: tasks,\n        onDeleteTask: deleteTaskHandler,\n        onDoneTask: doneTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoneTasks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oPrF27ALpB49yISbGlqg1k4cIVQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","AddTasks","Pending","DoneTasks","MyContext","SAMPLE_TASKS","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","addTaskHandler","newTask","prevTasks","deleteTaskHandler","taskId","filter","task","id","doneTaskHandler","map","status","className","children","task_name","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","onAddTask","onDeleteTask","onDoneTask","_c","$RefreshReg$"],"sources":["/home/pop/Desktop/repo/todo-app/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\nimport AddTasks from './components/AddTasks';\nimport Pending from './components/Pending';\nimport DoneTasks from './components/DoneTasks'\nimport { MyContext } from './components/MyContext';\n\nimport SAMPLE_TASKS from './data/sample-tasks.json'\n\nfunction App() {\n  const [tasks, setTasks] = useState(SAMPLE_TASKS)\n\n\n  const addTaskHandler = (newTask) => {\n    setTasks(prevTasks => [...prevTasks, newTask])\n  }\n  \n\n  const deleteTaskHandler = (taskId) => {\n    setTasks((prevTasks) => prevTasks.filter(task => task.id !== taskId))\n  }\n\n  const doneTaskHandler = (taskId) => {\n    setTasks((prevTasks) => \n        prevTasks.map((task) => \n        task.id === taskId ? {...task, status: 'done'} : task\n      )\n    )\n  }\n  return (\n    <div className=\"App\">\n      {\n        tasks.map(task => {\n          return <div key={task.id}>{task.task_name}</div>\n        })\n      }\n\n      {/* <AddTasks onAddTask={addTaskHandler}/> */}\n      {/* <Pending tasks={tasks} onDeleteTask={deleteTaskHandler}/> */}\n\n      <MyContext.Provider value={{tasks}} >\n        <AddTasks onAddTask={addTaskHandler}/>\n        <Pending tasks={tasks} onDeleteTask={deleteTaskHandler} onDoneTask={doneTaskHandler}/> \n        <DoneTasks />\n      </MyContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,SAAS,QAAQ,wBAAwB;AAElD,OAAOC,YAAY,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACK,YAAY,CAAC;EAGhD,MAAMO,cAAc,GAAIC,OAAO,IAAK;IAClCF,QAAQ,CAACG,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAChD,CAAC;EAGD,MAAME,iBAAiB,GAAIC,MAAM,IAAK;IACpCL,QAAQ,CAAEG,SAAS,IAAKA,SAAS,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAAC,CAAC;EACvE,CAAC;EAED,MAAMI,eAAe,GAAIJ,MAAM,IAAK;IAClCL,QAAQ,CAAEG,SAAS,IACfA,SAAS,CAACO,GAAG,CAAEH,IAAI,IACnBA,IAAI,CAACC,EAAE,KAAKH,MAAM,GAAG;MAAC,GAAGE,IAAI;MAAEI,MAAM,EAAE;IAAM,CAAC,GAAGJ,IACnD,CACF,CAAC;EACH,CAAC;EACD,oBACEX,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,GAEhBd,KAAK,CAACW,GAAG,CAACH,IAAI,IAAI;MAChB,oBAAOX,OAAA;QAAAiB,QAAA,EAAoBN,IAAI,CAACO;MAAS,GAAxBP,IAAI,CAACC,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAAC;IAClD,CAAC,CAAC,eAMJtB,OAAA,CAACH,SAAS,CAAC0B,QAAQ;MAACC,KAAK,EAAE;QAACrB;MAAK,CAAE;MAAAc,QAAA,gBACjCjB,OAAA,CAACN,QAAQ;QAAC+B,SAAS,EAAEpB;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtCtB,OAAA,CAACL,OAAO;QAACQ,KAAK,EAAEA,KAAM;QAACuB,YAAY,EAAElB,iBAAkB;QAACmB,UAAU,EAAEd;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtFtB,OAAA,CAACJ,SAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACpB,EAAA,CAtCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}